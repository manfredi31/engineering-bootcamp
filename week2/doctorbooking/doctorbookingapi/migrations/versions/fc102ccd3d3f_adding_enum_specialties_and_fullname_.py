"""Adding enum specialties and fullname field with temp nullable=True

Revision ID: fc102ccd3d3f
Revises: fa5e7ebb809f
Create Date: 2025-05-25 09:45:18.164602

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = 'fc102ccd3d3f'
down_revision = 'fa5e7ebb809f'
branch_labels = None
depends_on = None

specialty_enum = postgresql.ENUM('GENERAL_PHYSICIAN', 'GYNECOLOGIST', 'DERMATOLOGIST', 'PEDIATRICIAN', 'NEUROLOGIST', 'GASTROENTEROLOGIST', name='specialty')

def upgrade():
    # Create enum type first
    specialty_enum.create(op.get_bind())
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('doctor', schema=None) as batch_op:
        # Add the new fullname column
        batch_op.add_column(sa.Column('fullname', sa.String(), nullable=True))
        
        # First make specialty nullable to handle any existing data
        batch_op.alter_column('specialty', nullable=True)
        
        # Convert existing data to match one of the enum values (defaulting to GENERAL_PHYSICIAN)
        op.execute("UPDATE doctor SET specialty = 'GENERAL_PHYSICIAN' WHERE specialty IS NULL OR specialty NOT IN ('GENERAL_PHYSICIAN', 'GYNECOLOGIST', 'DERMATOLOGIST', 'PEDIATRICIAN', 'NEUROLOGIST', 'GASTROENTEROLOGIST')")
        
        # Now alter the column type with explicit casting
        op.execute("ALTER TABLE doctor ALTER COLUMN specialty TYPE specialty USING specialty::specialty")
        
        # Make it non-nullable now that data is converted
        batch_op.alter_column('specialty', nullable=False)
        
        # Handle indexes
        batch_op.drop_index(batch_op.f('ix_doctor_specialty'))
        batch_op.create_index(batch_op.f('ix_doctor_fullname'), ['fullname'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('doctor', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_doctor_fullname'))
        batch_op.create_index(batch_op.f('ix_doctor_specialty'), ['specialty'], unique=False)
        
        # Convert back to VARCHAR
        op.execute("ALTER TABLE doctor ALTER COLUMN specialty TYPE VARCHAR USING specialty::text")
        
        batch_op.alter_column('specialty',
               type_=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('fullname')

    # Drop the enum type
    specialty_enum.drop(op.get_bind())

    # ### end Alembic commands ###
